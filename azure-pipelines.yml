name: Azure Pipelines

stages:
  - stage: "Provisioning"
    jobs:
      - job: provision_infrastructure
        displayName: "Provision infrastructure"
        pool: myAgentPool
          vmimage: ubuntu-18.04
        steps:
          - task: DownloadSecureFile@1
            displayName: "Download terraform.tfvars file"
            name: tfvars
            inputs:
              secureFile: "terraform.tfvars"

          - task: Bash@3
            displayName: "Copy terraform.tfvars file"
            inputs:
              targetType: "inline"
              script: |
                #!/bin/bash
                sudo cp $(tfvars.secureFilePath) terraform/environments/test/terraform.tfvars

          - task: TerraformInstaller@0
            displayName: "Install Terraform"
            inputs:
              terraformVersion: '0.14.11'

          - task: TerraformTaskV1@0
            displayName: "Terraform init"
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test/"
              backendServiceArm: "myServiceConnection"
              backendAzureRmResourceGroupName: "Azuredevops"
              backendAzureRmStorageAccountName: "tstate12739"
              backendAzureRmContainerName: "tstate"
              backendAzureRmKey: "jNSOet4xZjGRiJH8xSqGuiR5kaj0Mje0XfLRtcqZvz7BoHcYB3rVRmZjs2+gJRx2GW3CeYKlSOy7+ASt6id9JA=="

          - task: TerraformTaskV1@0
            displayName: "Terraform validate"
            inputs:
              provider: "azurerm"
              command: "validate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test/"

          - task: TerraformTaskV1@0
            displayName: "Terraform plan"
            inputs:
              provider: "azurerm"
              command: "plan"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test/"
              environmentServiceNameAzureRM: "myServiceConnection"

          - task: TerraformTaskV1@0
            displayName: "Terraform apply"
            inputs:
              provider: "azurerm"
              command: "apply"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test/"
              commandOptions: "-auto-approve"
              environmentServiceNameAzureRM: "myServiceConnection"

  - stage: "Build"
    jobs:
      - job: build_artifacts
        displayName: "Build artifacts"
        pool: myAgentPool
          vmImage: "ubuntu-18.04"
        steps:
          - task: ArchiveFiles@2
            displayName: "Archive FakeRestAPI"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/fakerestapi"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/fakerestapi-$(Build.BuildId).zip"
              verbose: true

          - task: PublishPipelineArtifact@1
            displayName: "Publish FakeRestAPI"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/fakerestapi-$(Build.BuildId).zip"
              artifactName: "fakerestapi"

          - task: ArchiveFiles@2
            displayName: "Archive Selenium"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/automatedtesting/selenium"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/selenium-$(Build.BuildId).zip"
              verbose: true

          - task: PublishPipelineArtifact@1
            displayName: "Publish Selenium"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/selenium-$(Build.BuildId).zip"
              artifactName: "selenium"

 
