variables:
 - group: azurecreds

trigger:
- master

stages:
- stage: Provision
  jobs:
  - job: TerraformTasks
    displayName: Terraform Tasks
    pool:
      vmImage: 'ubuntu-18.04'

    steps:
    #- script: az login --service-principal -u $(client_id) --password $(client_secret) --tenant $(tenant_id) --allow-no-subscriptions
    #  displayName: Az Login

    #Download azurecreds.conf File
    - task: DownloadSecureFile@1
      displayName: Download azurecreds.conf file
      name: azurecreds
      inputs:
        secureFile: 'azurecreds.conf'

    # Install SSH Key for VM
    - task: InstallSSHKey@0
      displayName: Install SSH key
      inputs:
        knownHostsEntry: 'known_hosts'
        sshPublicKey: $(public_key)
        sshKeySecureFile: 'id_rsa'

    #Terraform Install
    - task: TerraformInstaller@0
      displayName: Terraform Install
      inputs:
        terraformVersion: '1.0.1'

    #Terraform Init
    - task: TerraformTaskV2@2
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        commandOptions: '-backend-config=$(azurecreds.secureFilePath)'
        backendServiceArm: 'azurerm-sc'
        backendAzureRmResourceGroupName: 'tstate'
        backendAzureRmStorageAccountName: 'tstate19206'
        backendAzureRmContainerName: 'tstate'
        backendAzureRmKey: 'test.terraform.tfstate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'


    - task: AzureCLI@1
      displayName: Set Environment Variables for Terraform
      inputs:
        azureSubscription: azurerm-sc
        scriptLocation: inlineScript
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        addSpnToEnvironment: true
        inlineScript: |
            export ARM_CLIENT_ID=$(client_id)
            export ARM_CLIENT_SECRET=$(client_secret)
            export ARM_SUBSCRIPTION_ID=$(subscription_id)
            export ARM_TENANT_ID=$(tenant_id)
    
    #Terraform Apply
    - task: TerraformTaskV2@2
      displayName: Terraform Apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: '-auto-approve'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        environmentServiceNameAzureRM: 'azurerm-sc'
      

